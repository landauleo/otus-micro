plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.2.2"
    //на более новых версиях вылетает Exception in thread "main" java.lang.NoClassDefFoundError: io/micronaut/runtime/Micronaut
    id("io.micronaut.library") version "3.2.2"
}

version = "0.1"
group = "leo.landau"

repositories {
    mavenCentral()
}

//Annotation Processor используется для автоматической генерации кода на этапе компиляции, на основе аннотаций, присутствующих в исходном коде
dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client:3.2.2")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut:micronaut-validation:3.2.2")

    annotationProcessor("io.micronaut.data:micronaut-data-processor:3.2.2")
    implementation("io.micronaut:micronaut-runtime:3.2.2")
    implementation("io.micronaut.data:micronaut-data-spring-jpa:3.2.2")
    implementation("org.springframework:spring-orm:5.2.0.RELEASE")
    implementation("io.micronaut.data:micronaut-data-spring:3.2.2")
    annotationProcessor("io.micronaut:micronaut-inject-java:3.2.2")

    //Swagger
    annotationProcessor("io.micronaut.openapi:micronaut-openapi:3.2.2")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut.openapi:micronaut-openapi")

    runtimeOnly("org.postgresql:postgresql:42.2.23")

    implementation("org.flywaydb:flyway-core")
    implementation("io.micronaut.flyway:micronaut-flyway")

    annotationProcessor("io.micronaut:micronaut-validation:3.2.2")
    implementation("io.micronaut:micronaut-inject:3.2.2")

    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-server-netty:3.2.2")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari:3.2.2")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa:3.2.2")

    //Prometheus
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
}

configurations.all {
    exclude module: 'slf4j-nop'
}

application {
    mainClass.set("leo.landau.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("leo.landau.*")
    }
}

shadowJar {
    archiveBaseName.set('ll-o-m')
    archiveVersion.set('0.1')
    archiveClassifier.set('')
    manifest {
        attributes 'Main-Class': 'leo.landau.Application'
    }
}

tasks.build.dependsOn tasks.shadowJar



