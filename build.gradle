plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.2.2" //на более новых версиях вылетает Exception in thread "main" java.lang.NoClassDefFoundError: io/micronaut/runtime/Micronaut
    id("io.micronaut.library") version "3.2.2"
}

version = "0.1"
group = "leo.landau"

repositories {
    mavenCentral()
}

//Annotation Processor используется для автоматической генерации кода на этапе компиляции, на основе аннотаций, присутствующих в исходном коде
dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.data:micronaut-data-spring-jpa:3.2.2")
    implementation("org.springframework:spring-orm:5.2.0.RELEASE")
    implementation("io.micronaut.data:micronaut-data-spring:3.2.2")
    annotationProcessor("io.micronaut:micronaut-inject-java")

    runtimeOnly("org.postgresql:postgresql:42.2.23")

//    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
//    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")

    // Testcontainers для PostgreSQL
    testImplementation("org.testcontainers:testcontainers:1.16.0")
    testImplementation("org.testcontainers:postgresql:1.16.0")
    testImplementation("org.testcontainers:junit-jupiter:1.16.0")

    // Micronaut Test
    testImplementation("io.micronaut.test:micronaut-test-junit5:3.2.2")




    annotationProcessor("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-inject")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
}


application {
    mainClass.set("leo.landau.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("leo.landau.*")
    }
}

shadowJar {
    archiveBaseName.set('ll-o-m')
    archiveVersion.set('0.1')
    archiveClassifier.set('')
    manifest {
        attributes 'Main-Class': 'leo.landau.Application'
    }
}

tasks.build.dependsOn tasks.shadowJar



