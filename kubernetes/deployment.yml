#описывает в скольких экземплярах запущен сервис, а также стратегию обновления на новую версию
apiVersion: apps/v1 #определены самим Kubernetes и зависят от конкретной версии Kubernetes, которую вы используете
kind: Deployment
metadata:
  name: ll-o-m-deployment
  labels:
    app: ll-o-m
spec: #Определяет желаемое состояние объекта Deployment.
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 2
  selector: #Определяет, какие поды должны быть управляемыми этим объектом
    matchLabels: #Определяет метки (labels), по которым должны совпадать поды для управления
      app: ll-o-m
  template: #Определяет шаблон для создания подов
    metadata:
      labels:
        app: ll-o-m
    spec:
      containers:
        - name: ll-o-m-container
          image: myteayourmilk/ll-o-m:latest
          ports:
            - containerPort: 8000 #Указывает номер порта в контейнере, который будет прослушиваться
              name: web #имя порта
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: users-configmap
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: users-configmap
                  key: DB_PORT
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: users-configmap
                  key: DB_DATABASE
            - name: DB_USER
                valueFrom:
                  secretKeyRef:
                    name: users-secret
                    key: DB_USER
                  - name: DB_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: users-secret
                        key: DB_PASSWORD
            volumes: #используются для монтирования чего-то в контейнере
              - name: postgres.yml
                persistentVolumeClaim:
                  claimName: postgres.yml
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
                - name: Accept
                  value: application/json
              path: /health
              port: 8000
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
                - name: Accept
                  value: application/json
              path: /health
              port: 8000
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            initialDelaySeconds: 10
